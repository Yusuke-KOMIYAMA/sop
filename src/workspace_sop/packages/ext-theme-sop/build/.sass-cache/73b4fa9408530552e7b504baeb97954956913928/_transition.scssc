3.1.7 (Brainy Betty)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@options{ :@has_childrenT:
@linei:@children[o:Sass::Tree::ImportNode
;0;@:@imported_filename"shared;	i;
[ o:Sass::Tree::CommentNode:@silenti ;@:@lines[ :
@loud0:@value"ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;	i;
[ o:Sass::Tree::VariableNode:
@expro:Sass::Script::String	;@:
@type:identifier;"all;	i:
@name" default-transition-property;@:@guarded"!default;	i;
[ o;;o:Sass::Script::Number:@original"1s;@:@denominator_units[ ;i;	i:@numerator_units["s;" default-transition-duration;@;"!default;	i;
[ o;;o:Sass::Script::Bool;@;F;	i;" default-transition-function;@;"!default;	i;
[ o;;o;;@;F;	i;"default-transition-delay;@;"!default;	i;
[ o;;o:Sass::Script::List	;@;[o;	;@;;;"transform;	io;	;@;;;"transform-origin;	i;	i:@separator:
comma;"#transitionable-prefixed-values;@;"!default;	i;
[ o;;i ;@;[ ;0;"}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;	i!;
[ o:Sass::Tree::MixinDefNode;"transition-property:
@args[[o:Sass::Script::Variable;"property-1;{ :@underscored_name"property_1o;#	;" default-transition-property;@=;$" default_transition_property;	i&[o;#;"property-2;@=;$"property_2o;;@=;F;	i'[o;#;"property-3;@=;$"property_3o;;@=;F;	i([o;#;"property-4;@=;$"property_4o;;@=;F;	i)[o;#;"property-5;@=;$"property_5o;;@=;F;	i*[o;#;"property-6;@=;$"property_6o;;@=;F;	i+[o;#;"property-7;@=;$"property_7o;;@=;F;	i,[o;#;"property-8;@=;$"property_8o;;@=;F;	i-[o;#;"property-9;@=;$"property_9o;;@=;F;	i.[o;#;"property-10;@=;$"property_10o;;@=;F;	i/;@;T;	i0;
[u:Sass::Tree::IfNodeÍ[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@options{ :
@type:identifier:@value"string:
@linei1;@:@operator:eq:@operand1o:Sass::Script::Funcall
:
@name"type-of:
@args[o:Sass::Script::Variable	;"property-1;@:@underscored_name"property_1;i1;@:@keywords{ ;i1;i10[o:Sass::Tree::VariableNode:
@expro;
;"unquote;[o;	;"property-1;@;"property_1;i1;@;{ ;i1;"property-1;@:@guarded0;i1:@children[ o;;o:Sass::Script::Funcall
;"compact;"[o;#	;"property-1;@;$"property_1;	i2o;#	;"property-2;@;$"property_2;	i2o;#	;"property-3;@;$"property_3;	i2o;#	;"property-4;@;$"property_4;	i2o;#	;"property-5;@;$"property_5;	i2o;#	;"property-6;@;$"property_6;	i2o;#	;"property-7;@;$"property_7;	i2o;#	;"property-8;@;$"property_8;	i2o;#	;"property-9;@;$"property_9;	i2o;#	;"property-10;@;$"property_10;	i2;@:@keywords{ ;	i2;"properties;@;0;	i2;
[ u;%¼[o:Sass::Script::Variable	:
@name"$experimental-support-for-webkit:@options{ :@underscored_name"$experimental_support_for_webkit:
@linei30[o:Sass::Tree::PropNode:@prop_syntax:new;[" -webkit-transition-property:
@tabsi ;@:@valueo:Sass::Script::Funcall
;"prefixed-for-transition:
@args[o:Sass::Script::String	;@:
@type:identifier;"-webkit;	i3o; 	;"properties;@;"properties;	i3;@:@keywords{ ;	i3;	i3:@children[ u;%¸[o:Sass::Script::Variable	:
@name"%experimental-support-for-mozilla:@options{ :@underscored_name"%experimental_support_for_mozilla:
@linei40[o:Sass::Tree::PropNode:@prop_syntax:new;["-moz-transition-property:
@tabsi ;@:@valueo:Sass::Script::Funcall
;"prefixed-for-transition:
@args[o:Sass::Script::String	;@:
@type:identifier;"	-moz;	i4o; 	;"properties;@;"properties;	i4;@:@keywords{ ;	i4;	i4:@children[ u;%°[o:Sass::Script::Variable	:
@name"#experimental-support-for-opera:@options{ :@underscored_name"#experimental_support_for_opera:
@linei50[o:Sass::Tree::PropNode:@prop_syntax:new;["-o-transition-property:
@tabsi ;@:@valueo:Sass::Script::Funcall
;"prefixed-for-transition:
@args[o:Sass::Script::String	;@:
@type:identifier;"-o;	i5o; 	;"properties;@;"properties;	i5;@:@keywords{ ;	i5;	i5:@children[ o:Sass::Tree::PropNode:@prop_syntax:new;["transition-property:
@tabsi ;@;o;#	;"properties;@;$"properties;	i6;	i6;
[ o;;i ;@;[ ;0;"¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;	i9;
[ o;!;"transition-duration;"[[o;#;"duration-1;{ ;$"duration_1o;#	;" default-transition-duration;@¥;$" default_transition_duration;	i>[o;#;"duration-2;@¥;$"duration_2o;;@¥;F;	i?[o;#;"duration-3;@¥;$"duration_3o;;@¥;F;	i@[o;#;"duration-4;@¥;$"duration_4o;;@¥;F;	iA[o;#;"duration-5;@¥;$"duration_5o;;@¥;F;	iB[o;#;"duration-6;@¥;$"duration_6o;;@¥;F;	iC[o;#;"duration-7;@¥;$"duration_7o;;@¥;F;	iD[o;#;"duration-8;@¥;$"duration_8o;;@¥;F;	iE[o;#;"duration-9;@¥;$"duration_9o;;@¥;F;	iF[o;#;"duration-10;@¥;$"duration_10o;;@¥;F;	iG;@;T;	iH;
[u;%Í[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@options{ :
@type:identifier:@value"string:
@lineiI;@:@operator:eq:@operand1o:Sass::Script::Funcall
:
@name"type-of:
@args[o:Sass::Script::Variable	;"duration-1;@:@underscored_name"duration_1;iI;@:@keywords{ ;iI;iI0[o:Sass::Tree::VariableNode:
@expro;
;"unquote;[o;	;"duration-1;@;"duration_1;iI;@;{ ;iI;"duration-1;@:@guarded0;iI:@children[ o;;o;&
;"compact;"[o;#	;"duration-1;@;$"duration_1;	iJo;#	;"duration-2;@;$"duration_2;	iJo;#	;"duration-3;@;$"duration_3;	iJo;#	;"duration-4;@;$"duration_4;	iJo;#	;"duration-5;@;$"duration_5;	iJo;#	;"duration-6;@;$"duration_6;	iJo;#	;"duration-7;@;$"duration_7;	iJo;#	;"duration-8;@;$"duration_8;	iJo;#	;"duration-9;@;$"duration_9;	iJo;#	;"duration-10;@;$"duration_10;	iJ;@;'{ ;	iJ;"durations;@;0;	iJ;
[ o:Sass::Tree::MixinNode;"experimental;"[o;	;@;;;"transition-duration;	iKo;#	;"durations;@;$"durations;	iKo;	;@;;;"	-moz;	iLo;	;@;;;"-webkit;	iLo;	;@;;;"-o;	iLo:!Sass::Script::UnaryOperation	;@:@operator:not:@operando;	;@;;;"-ms;	iL;	iLo;-	;@;.;/;0o;	;@;;;"-khtml;	iL;	iLo;	;@;;;"official;	iL;@;'{ ;	iM;
[ o;;i ;@;[ ;0;"õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;	iP;
[ o;!;"transition-timing-function;"[[o;#;"function-1;{ ;$"function_1o;#	;" default-transition-function;@ ;$" default_transition_function;	iV[o;#;"function-2;@ ;$"function_2o;;@ ;F;	iW[o;#;"function-3;@ ;$"function_3o;;@ ;F;	iX[o;#;"function-4;@ ;$"function_4o;;@ ;F;	iY[o;#;"function-5;@ ;$"function_5o;;@ ;F;	iZ[o;#;"function-6;@ ;$"function_6o;;@ ;F;	i[[o;#;"function-7;@ ;$"function_7o;;@ ;F;	i\[o;#;"function-8;@ ;$"function_8o;;@ ;F;	i][o;#;"function-9;@ ;$"function_9o;;@ ;F;	i^[o;#;"function-10;@ ;$"function_10o;;@ ;F;	i_;@;T;	i`;
[o;;o;&
;"unquote;"[o;#	;"function-1;@;$"function_1;	ia;@;'{ ;	ia;"function-1;@;0;	ia;
[ o;;o;&
;"compact;"[o;#	;"function-1;@;$"function_1;	ibo;#	;"function-2;@;$"function_2;	ibo;#	;"function-3;@;$"function_3;	ibo;#	;"function-4;@;$"function_4;	ibo;#	;"function-5;@;$"function_5;	ibo;#	;"function-6;@;$"function_6;	ibo;#	;"function-7;@;$"function_7;	ibo;#	;"function-8;@;$"function_8;	ibo;#	;"function-9;@;$"function_9;	ibo;#	;"function-10;@;$"function_10;	ib;@;'{ ;	ib;"functions;@;0;	ib;
[ o;,;"experimental;"[o;	;@;;;"transition-timing-function;	ico;#	;"functions;@;$"functions;	ico;	;@;;;"	-moz;	ido;	;@;;;"-webkit;	ido;	;@;;;"-o;	ido;-	;@;.;/;0o;	;@;;;"-ms;	id;	ido;-	;@;.;/;0o;	;@;;;"-khtml;	id;	ido;	;@;;;"official;	id;@;'{ ;	ie;
[ o;;i ;@;[ ;0;"¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;	ih;
[ o;!;"transition-delay;"[[o;#;"delay-1;{ ;$"delay_1o;#	;"default-transition-delay;@¤;$"default_transition_delay;	im[o;#;"delay-2;@¤;$"delay_2o;;@¤;F;	in[o;#;"delay-3;@¤;$"delay_3o;;@¤;F;	io[o;#;"delay-4;@¤;$"delay_4o;;@¤;F;	ip[o;#;"delay-5;@¤;$"delay_5o;;@¤;F;	iq[o;#;"delay-6;@¤;$"delay_6o;;@¤;F;	ir[o;#;"delay-7;@¤;$"delay_7o;;@¤;F;	is[o;#;"delay-8;@¤;$"delay_8o;;@¤;F;	it[o;#;"delay-9;@¤;$"delay_9o;;@¤;F;	iu[o;#;"delay-10;@¤;$"delay_10o;;@¤;F;	iv;@;T;	iw;
[u;%¾[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@options{ :
@type:identifier:@value"string:
@lineix;@:@operator:eq:@operand1o:Sass::Script::Funcall
:
@name"type-of:
@args[o:Sass::Script::Variable	;"delay-1;@:@underscored_name"delay_1;ix;@:@keywords{ ;ix;ix0[o:Sass::Tree::VariableNode:
@expro;
;"unquote;[o;	;"delay-1;@;"delay_1;ix;@;{ ;ix;"delay-1;@:@guarded0;ix:@children[ o;;o;&
;"compact;"[o;#	;"delay-1;@;$"delay_1;	iyo;#	;"delay-2;@;$"delay_2;	iyo;#	;"delay-3;@;$"delay_3;	iyo;#	;"delay-4;@;$"delay_4;	iyo;#	;"delay-5;@;$"delay_5;	iyo;#	;"delay-6;@;$"delay_6;	iyo;#	;"delay-7;@;$"delay_7;	iyo;#	;"delay-8;@;$"delay_8;	iyo;#	;"delay-9;@;$"delay_9;	iyo;#	;"delay-10;@;$"delay_10;	iy;@;'{ ;	iy;"delays;@;0;	iy;
[ o;,;"experimental;"[o;	;@;;;"transition-delay;	izo;#	;"delays;@;$"delays;	izo;	;@;;;"	-moz;	i{o;	;@;;;"-webkit;	i{o;	;@;;;"-o;	i{o;-	;@;.;/;0o;	;@;;;"-ms;	i{;	i{o;-	;@;.;/;0o;	;@;;;"-khtml;	i{;	i{o;	;@;;;"official;	i{;@;'{ ;	i|;
[ o;;i ;@;[ ;0;"*/* Transition all-in-one shorthand */;	i;
[ o;!;"single-transition;"[	[o;#;"property;{ ;$"propertyo;#	;" default-transition-property;@;$" default_transition_property;	i}[o;#;"duration;@;$"durationo;#	;" default-transition-duration;@;$" default_transition_duration;	i~[o;#;"function;@;$"functiono;#	;" default-transition-function;@;$" default_transition_function;	i[o;#;"
delay;@;$"
delayo;#	;"default-transition-delay;@;$"default_transition_delay;	i;@;T;	i;
[o;,;"transition;"[o;&
;"compact;"[o;	;@;[	o;#	;"property;@;$"property;	io;#	;"duration;@;$"duration;	io;#	;"function;@;$"function;	io;#	;"
delay;@;$"
delay;	i;	i;:
space;@;'{ ;	i;@;'{ ;	i;
[ o;!;"transition;"[[o;#;"transition-1;{ ;$"transition_1o;	;@W;;;"default;	i[o;#;"transition-2;@W;$"transition_2o;;@W;F;	i[o;#;"transition-3;@W;$"transition_3o;;@W;F;	i[o;#;"transition-4;@W;$"transition_4o;;@W;F;	i[o;#;"transition-5;@W;$"transition_5o;;@W;F;	i[o;#;"transition-6;@W;$"transition_6o;;@W;F;	i[o;#;"transition-7;@W;$"transition_7o;;@W;F;	i[o;#;"transition-8;@W;$"transition_8o;;@W;F;	i[o;#;"transition-9;@W;$"transition_9o;;@W;F;	i[o;#;"transition-10;@W;$"transition_10o;;@W;F;	i;@;T;	i;
[u;%î[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@options{ :
@type:identifier:@value"default:
@linei;@:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"transition-1;@:@underscored_name"transition_1;i;i0[o:Sass::Tree::VariableNode:
@expro:Sass::Script::Funcall
;"compact:
@args[o:Sass::Script::List	;@;[	o;	;" default-transition-property;@;" default_transition_property;io;	;" default-transition-duration;@;" default_transition_duration;io;	;" default-transition-function;@;" default_transition_function;io;	;"default-transition-delay;@;"default_transition_delay;i;i:@separator:
space;@:@keywords{ ;i;"transition-1;@:@guarded0;i:@children[ o;;o;;@;F;	i;"transitions;@;0;	i;
[ u;%g[o:Sass::Script::Operation
:@operand2o; 
;o:Sass::Script::String	:@options{ :
@type:identifier:@value"	list:
@linei;@	:@operator:eq:@operand1o:Sass::Script::Funcall
:
@name"type-of:
@args[o;
;"nth;[o:Sass::Script::Variable	;"transition-1;@	:@underscored_name"transition_1;io:Sass::Script::Number:@original"1;@	:@denominator_units[ ;i;i:@numerator_units[ ;@	:@keywords{ ;i;@	;{ ;i;i;@	;:and;o; 
;o;	;@	;	;
;"	list;i;@	;;;o;
;"type-of;[o;	;"transition-1;@	;"transition_1;i;@	;{ ;i;i;iu:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:
@expro:Sass::Script::Funcall
:
@name"compact:
@args[o:Sass::Script::Variable	;"transition-1:@options{ :@underscored_name"transition_1:
@lineio;
	;"transition-2;@;"transition_2;io;
	;"transition-3;@;"transition_3;io;
	;"transition-4;@;"transition_4;io;
	;"transition-5;@;"transition_5;io;
	;"transition-6;@;"transition_6;io;
	;"transition-7;@;"transition_7;io;
	;"transition-8;@;"transition_8;io;
	;"transition-9;@;"transition_9;io;
	;"transition-10;@;"transition_10;i;@:@keywords{ ;i;"transitions;@:@guarded0;i:@children[ [o:Sass::Tree::VariableNode:
@expro;
;"	join;[o;	;"transition-1;@	;"transition_1;io;
;"compact;[o;	;"transition-2;@	;"transition_2;io;	;"transition-3;@	;"transition_3;io;	;"transition-4;@	;"transition_4;io;	;"transition-5;@	;"transition_5;io;	;"transition-6;@	;"transition_6;io;	;"transition-7;@	;"transition_7;io;	;"transition-8;@	;"transition_8;io;	;"transition-9;@	;"transition_9;io;	;"transition-10;@	;"transition_10;i;@	;{ ;io;	;@	;	;
;"
comma;i;@	;{ ;i;"transitions;@	:@guarded0;i:@children[ o;;o;&
;"comma-list;"[ ;@;'{ ;	i;"delays;@;0;	i;
[ o;;o;;@;F;	i;"has-delays;@;0;	i;
[ o;;o;&
;"comma-list;"[ ;@;'{ ;	i;"webkit-value;@;0;	i;
[ o;;o;&
;"comma-list;"[ ;@;'{ ;	i;"moz-value;@;0;	i;
[ o;;o;&
;"comma-list;"[ ;@;'{ ;	i;"o-value;@;0;	i;
[ o;;i ;@;[ ;0;"/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;	i ;
[ o:Sass::Tree::EachNode:	@var"transition:
@listo;#	;"transitions;@;$"transitions;	i¢;@;T;	i¢;
[o;;i ;@;[ ;0;"}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;	i£;
[ o;;o;&
;"nth;"[o;#	;"transition;@;$"transition;	i¥o;;"1;@;[ ;i;	i¥;[ ;@;'{ ;	i¥;"property;@;0;	i¥;
[ o;;o;;@;F;	i¦;"duration;@;0;	i¦;
[ o;;o;;@;F;	i§;"timing-function;@;0;	i§;
[ o;;o;;@;F;	i¨;"
delay;@;0;	i¨;
[ u;%
[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@original"1:@options{ :@denominator_units[ :@valuei:
@linei©:@numerator_units[ ;	@	:@operator:gt:@operand1o:Sass::Script::Funcall
:
@name"length:
@args[o:Sass::Script::Variable	;"transition;	@	:@underscored_name"transition;i©;	@	:@keywords{ ;i©;i©0[o:Sass::Tree::VariableNode:
@expro;
;"nth;[o;	;"transition;	@	;"transition;i©o;;"2;	@	;
@
;i;i©;[ ;	@	;{ ;i©;"duration;	@	:@guarded0;i©:@children[ u;%[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@original"2:@options{ :@denominator_units[ :@valuei:
@lineiª:@numerator_units[ ;	@	:@operator:gt:@operand1o:Sass::Script::Funcall
:
@name"length:
@args[o:Sass::Script::Variable	;"transition;	@	:@underscored_name"transition;iª;	@	:@keywords{ ;iª;iª0[o:Sass::Tree::VariableNode:
@expro;
;"nth;[o;	;"transition;	@	;"transition;iªo;;"3;	@	;
@
;i;iª;[ ;	@	;{ ;iª;"timing-function;	@	:@guarded0;iª:@children[ u;%M[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@original"3:@options{ :@denominator_units[ :@valuei:
@linei«:@numerator_units[ ;	@	:@operator:gt:@operand1o:Sass::Script::Funcall
:
@name"length:
@args[o:Sass::Script::Variable	;"transition;	@	:@underscored_name"transition;i«;	@	:@keywords{ ;i«;i«0[o:Sass::Tree::VariableNode:
@expro;
;"nth;[o;	;"transition;	@	;"transition;i«o;;"4;	@	;
@
;i	;i«;[ ;	@	;{ ;i«;"
delay;	@	:@guarded0;i«:@children[ o;;o:Sass::Script::Bool;	@	;T;i«;"has-delays;	@	;0;i«;[ o;;i ;@;[ ;0;";/* If a delay is provided without a timing function */;	i­;
[ u;%^[o:Sass::Script::Operation
:@operand2o:!Sass::Script::UnaryOperation	:@options{ :@operator:not:@operando:Sass::Script::Variable	:
@name"
delay;@:@underscored_name"
delay:
@linei®;i®;@;	:and:@operand1o:Sass::Script::Funcall
;"is-time:
@args[o;	;"timing-function;@;"timing_function;i®;@:@keywords{ ;i®;i®0[o:Sass::Tree::VariableNode:
@expro;	;"timing-function;@;"timing_function;i®;"
delay;@:@guarded0;i®:@children[ o;;o:Sass::Script::Bool;@:@valueF;i®;"timing-function;@;0;i®;[ o;;o;;@;T;i®;"has-delays;@;0;i®;[ o;;i ;@;[ ;0;"9/* Keep a list of delays in case one is specified */;	i°;
[ o;;o;&
;"append;"[o;#	;"delays;@;$"delays;	i±o;&
;"if;"[o;#	;"
delay;@;$"
delay;	i±o;#	;"
delay;@;$"
delay;	i±o;;"0s;@;[ ;i ;	i±;["s;@;'{ ;	i±;@;'{ ;	i±;"delays;@;0;	i±;
[ o;;o;&
;"append;"[o;#	;"webkit-value;@;$"webkit_value;	i³o;&
;"compact;"[o;	;@;[o;&
;"prefixed-for-transition;"[o;	;@;;;"-webkit;	i³o;#	;"property;@;$"property;	i³;@;'{ ;	i³o;#	;"duration;@;$"duration;	i³o;#	;"timing-function;@;$"timing_function;	i³;	i³;;1;@;'{ ;	i³;@;'{ ;	i³;"webkit-value;@;0;	i³;
[ o;;o;&
;"append;"[o;#	;"moz-value;@;$"moz_value;	i´o;&
;"compact;"[o;	;@;[	o;&
;"prefixed-for-transition;"[o;	;@;;;"	-moz;	i´o;#	;"property;@;$"property;	i´;@;'{ ;	i´o;#	;"duration;@;$"duration;	i´o;#	;"timing-function;@;$"timing_function;	i´o;#	;"
delay;@;$"
delay;	i´;	i´;;1;@;'{ ;	i´;@;'{ ;	i´;"moz-value;@;0;	i´;
[ o;;o;&
;"append;"[o;#	;"o-value;@;$"o_value;	iµo;&
;"compact;"[o;	;@;[	o;&
;"prefixed-for-transition;"[o;	;@;;;"-o;	iµo;#	;"property;@;$"property;	iµ;@;'{ ;	iµo;#	;"duration;@;$"duration;	iµo;#	;"timing-function;@;$"timing_function;	iµo;#	;"
delay;@;$"
delay;	iµ;	iµ;;1;@;'{ ;	iµ;@;'{ ;	iµ;"o-value;@;0;	iµ;
[ u;%é[o:Sass::Script::Variable	:
@name"$experimental-support-for-webkit:@options{ :@underscored_name"$experimental_support_for_webkit:
@linei¸0[o:Sass::Tree::PropNode:@prop_syntax:new;["-webkit-transition:
@tabsi ;@:@valueo; 	;"webkit-value;@;"webkit_value;	i¸;	i¸:@children[ o:Sass::Tree::CommentNode:@silenti ;@:@lines[ :
@loud0;"j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;	i¹;[ u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:
@name"has-delays:@options{ :@underscored_name"has_delays:
@lineiº0[o:Sass::Tree::PropNode:@prop_syntax:new;["-webkit-transition-delay:
@tabsi ;@:@valueo; 	;"delays;@;"delays;	iº;	iº:@children[ u;%#[o:Sass::Script::Variable	:
@name"%experimental-support-for-mozilla:@options{ :@underscored_name"%experimental_support_for_mozilla:
@linei»0[o:Sass::Tree::PropNode:@prop_syntax:new;["-moz-transition:
@tabsi ;@:@valueo; 	;"moz-value;@;"moz_value;	i»;	i»:@children[ u;%[o:Sass::Script::Variable	:
@name"#experimental-support-for-opera:@options{ :@underscored_name"#experimental_support_for_opera:
@linei¼0[o:Sass::Tree::PropNode:@prop_syntax:new;["-o-transition:
@tabsi ;@:@valueo; 	;"o-value;@;"o_value;	i¼;	i¼:@children[ o;(;);*;["transition;+i ;@;o;#	;"transitions;@;$"transitions;	i½;	i½;
[ o;;i ;@;[ ;0;"Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;	iÀ;
[ o:Sass::Tree::FunctionNode;"comma-list;"[[o;#;"	list;@;$"	listo;	;@;[ ;	iÁ;;1;@;T;	iÁ;
[o:Sass::Tree::ReturnNode	;o;&
;"	join;"[o;	;@;[ ;	iÂ;;1o;#	;"	list;@;$"	list;	iÂo;	;@;;;"
comma;	iÂ;@;'{ ;	iÂ;@;	iÂ;
[ o;;i ;@;[ ;0;"i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;	iÅ;
[ o;5;"prefixed-for-transition;"[[o;#;"prefix;@;$"prefix0[o;#;"property;@;$"property0;@;T;	iÆ;
[u;%[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@options{ :
@type:identifier:@value"	list:
@lineiÇ;@:@operator:eq:@operand1o:Sass::Script::Funcall
:
@name"type-of:
@args[o:Sass::Script::Variable	;"property;@:@underscored_name"property;iÇ;@:@keywords{ ;iÇ;iÇu:Sass::Tree::IfNodeP[00[u:Sass::Tree::IfNode0[o:Sass::Script::Funcall
:
@name"
index:
@args[o:Sass::Script::Variable	;"#transitionable-prefixed-values:@options{ :@underscored_name"#transitionable_prefixed_values:
@lineiÎo;	;"property;	@;
"property;iÎ;	@:@keywords{ ;iÎu:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Variable	:
@name"property:@options{ :@underscored_name"property:
@lineiÑ;	@
;iÑ:@children[ [o:Sass::Tree::ReturnNode	:
@expro: Sass::Script::Interpolation:@whitespace_after0:@before0;	@:@whitespace_beforei:@aftero;;0;o;;F;0;	@;0;0:@originally_text:originally_text;iÏ:	@mido:Sass::Script::String	;	@:
@type:identifier:@value"-;iÏ;	@;0;0;F;iÏ;o;	;"property;	@;
"property;iÏ;F;iÏ;o;	;"prefix;	@;
"prefix;iÏ;	@;iÏ:@children[ [o:Sass::Tree::VariableNode:
@expro;
;"comma-list;[ ;@;{ ;iÈ;"new-list;@:@guarded0;iÈ:@children[ o:Sass::Tree::EachNode:	@var"v:
@listo;	;"property;@;"property;iÉ;@:@has_childrenT;iÉ;[o;;o;
;"append;[o;	;"new-list;@;"new_list;iÊo;
;"prefixed-for-transition;[o;	;"prefix;@;"prefix;iÊo;	;"v;@;"v;iÊ;@;{ ;iÊ;@;{ ;iÊ;"new-list;@;0;iÊ;[ o:Sass::Tree::ReturnNode	;o;	;"new-list;@;"new_list;iÌ;@;iÌ;[ o;;i ;@;[ ;0;"7/* Checks if the value given is a unit of time. */;	iÖ;
[ o;5;"is-time;"[[o;#;"
value;@;$"
value0;@;T;	i×;
[u;%ù[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@options{ :
@type:identifier:@value"number:
@lineiØ;@:@operator:eq:@operand1o:Sass::Script::Funcall
:
@name"type-of:
@args[o:Sass::Script::Variable	;"
value;@:@underscored_name"
value;iØ;@:@keywords{ ;iØ;iØu:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Bool:@options{ :@valueF:
@lineiÛ;@	;
iÛ:@children[ [o:Sass::Tree::ReturnNode	:
@expro:!Sass::Script::UnaryOperation	;@;:not:@operando;	;@;;;o;
;"
index;[o:Sass::Script::List	;@;[o;	;@;	;
;"s;iÙo;	;@;	;
;"ms;iÙ;iÙ:@separator:
spaceo;
;"	unit;[o;	;"
value;@;"
value;iÙ;@;{ ;iÙ;@;{ ;iÙ;iÙ;iÙ;@;iÙ:@children[ 